import time
import board
import busio
from adafruit_lsm303 import LSM303

# I²C 설정
i2c = busio.I2C(board.SCL, board.SDA)

# L3GD20 주소와 레지스터
L3GD20_ADDR = 0x69
CTRL_REG1 = 0x20
CTRL_REG4 = 0x23
OUT_X_L = 0x28
OUT_X_H = 0x29
OUT_Y_L = 0x2A
OUT_Y_H = 0x2B
OUT_Z_L = 0x2C
OUT_Z_H = 0x2D

# LSM303 초기화
lsm303 = LSM303(i2c)

# L3GD20 초기화
def init_gyro(i2c, addr):
    i2c.writeto(addr, bytes([CTRL_REG1, 0x0F]))  # Normal mode, all axes enabled
    i2c.writeto(addr, bytes([CTRL_REG4, 0x00]))  # ±250 dps (default)

# Signed Integer 변환
def convert_to_signed(value):
    if value & 0x8000:
        return value - 0x10000
    return value

# 레지스터 읽기
def read_register(i2c, addr, reg):
    result = bytearray(1)
    i2c.writeto_then_readfrom(addr, bytes([reg]), result)
    return result[0]

# L3GD20 센서 데이터 읽기
def read_gyro_data(i2c, addr):
    x = convert_to_signed((read_register(i2c, addr, OUT_X_H) << 8) | read_register(i2c, addr, OUT_X_L))
    y = convert_to_signed((read_register(i2c, addr, OUT_Y_H) << 8) | read_register(i2c, addr, OUT_Y_L))
    z = convert_to_signed((read_register(i2c, addr, OUT_Z_H) << 8) | read_register(i2c, addr, OUT_Z_L))
    return x, y, z

# L3GD20 초기화
init_gyro(i2c, L3GD20_ADDR)

# 데이터 측정
try:
    while True:
        # LSM303 가속도 데이터 읽기
        accel_x, accel_y, accel_z = lsm303.acceleration

        # L3GD20 자이로 데이터 읽기
        gyro_x, gyro_y, gyro_z = read_gyro_data(i2c, L3GD20_ADDR)

        # 데이터 출력
        print(f"Accel: X={accel_x:.2f}, Y={accel_y:.2f}, Z={accel_z:.2f}, Gyro:  X={gyro_x}, Y={gyro_y}, Z={gyro_z}")
        
        
        # 1초 대기
        time.sleep(1)
except KeyboardInterrupt:
    print("측정을 종료합니다.")
