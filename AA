import serial
import math
import time

def calculate_orientation(accel, gyro, dt, previous_heading):
    """가속도와 각속도를 기반으로 ROLL, PITCH, HEADING 계산"""
    ax, ay, az = accel
    roll = math.atan2(ay, az)
    pitch = math.atan2(-ax, math.sqrt(ay**2 + az**2))

    wx, wy, wz = gyro
    heading = previous_heading + wz * dt  # Z축 각속도 적분

    roll_deg = math.degrees(roll)
    pitch_deg = math.degrees(pitch)
    heading_deg = math.degrees(heading) % 360

    return roll_deg, pitch_deg, heading_deg

# 시리얼 포트 설정
SERIAL_PORT = '/dev/ttyUSB0'
BAUD_RATE = 115200
ser = serial.Serial(SERIAL_PORT, baudrate=BAUD_RATE, timeout=1)

# 초기값
previous_heading = 0.0  # 초기 HEADING

try:
    print("데이터 수집 시작...")
    while True:
        # 센서에서 데이터 읽기
        raw_data = ser.readline().decode().strip()
        if raw_data:
            try:
                # 데이터를 공백으로 분리하여 가속도와 각속도 추출
                values = list(map(float, raw_data.split()))
                if len(values) >= 6:  # 가속도(3) + 각속도(3)
                    accel_data = values[:3]  # 가속도 데이터 (ax, ay, az)
                    gyro_data = values[3:6]  # 각속도 데이터 (wx, wy, wz)

                    # ROLL, PITCH, HEADING 계산
                    dt = 1.0  # 1초 간격
                    roll, pitch, heading = calculate_orientation(accel_data, gyro_data, dt, previous_heading)

                    # HEADING 갱신
                    previous_heading = heading

                    # 결과 출력
                    print(f"ROLL: {roll:.2f}°, PITCH: {pitch:.2f}°, HEADING: {heading:.2f}°")

                else:
                    print("데이터 형식 오류:", raw_data)
            except ValueError:
                print("데이터 변환 오류:", raw_data)

        time.sleep(1)  # 1초 대기

except KeyboardInterrupt:
    print("데이터 수집 중단.")
finally:
    ser.close()
